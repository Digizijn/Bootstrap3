/* **********************************************
     Begin affix.js
********************************************** *//* ========================================================================
 * Bootstrap: affix.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#affix
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */+function(e) {
    "use strict";
    var t = function(n, r) {
        this.options = e.extend({}, t.DEFAULTS, r);
        this.$window = e(window).on("scroll.bs.affix.data-api", e.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", e.proxy(this.checkPositionWithEventLoop, this));
        this.$element = e(n);
        this.affixed = this.unpin = null;
        this.checkPosition();
    };
    t.RESET = "affix affix-top affix-bottom";
    t.DEFAULTS = {
        offset: 0
    };
    t.prototype.checkPositionWithEventLoop = function() {
        setTimeout(e.proxy(this.checkPosition, this), 1);
    };
    t.prototype.checkPosition = function() {
        if (!this.$element.is(":visible")) return;
        var n = e(document).height(), r = this.$window.scrollTop(), i = this.$element.offset(), s = this.options.offset, o = s.top, u = s.bottom;
        typeof s != "object" && (u = o = s);
        typeof o == "function" && (o = s.top());
        typeof u == "function" && (u = s.bottom());
        var a = this.unpin != null && r + this.unpin <= i.top ? !1 : u != null && i.top + this.$element.height() >= n - u ? "bottom" : o != null && r <= o ? "top" : !1;
        if (this.affixed === a) return;
        this.unpin && this.$element.css("top", "");
        this.affixed = a;
        this.unpin = a == "bottom" ? i.top - r : null;
        this.$element.removeClass(t.RESET).addClass("affix" + (a ? "-" + a : ""));
        a == "bottom" && this.$element.offset({
            top: document.body.offsetHeight - u - this.$element.height()
        });
    };
    var n = e.fn.affix;
    e.fn.affix = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("bs.affix"), s = typeof n == "object" && n;
            i || r.data("bs.affix", i = new t(this, s));
            typeof n == "string" && i[n]();
        });
    };
    e.fn.affix.Constructor = t;
    e.fn.affix.noConflict = function() {
        e.fn.affix = n;
        return this;
    };
    e(window).on("load", function() {
        e('[data-spy="affix"]').each(function() {
            var t = e(this), n = t.data();
            n.offset = n.offset || {};
            n.offsetBottom && (n.offset.bottom = n.offsetBottom);
            n.offsetTop && (n.offset.top = n.offsetTop);
            t.affix(n);
        });
    });
}(window.jQuery);

+function(e) {
    "use strict";
    var t = function(e, t) {
        this.type = this.options = this.enabled = this.timeout = this.hoverState = this.$element = null;
        this.init("tooltip", e, t);
    };
    t.DEFAULTS = {
        animation: !0,
        placement: "top",
        selector: !1,
        template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: "hover focus",
        title: "",
        delay: 0,
        html: !1,
        container: !1
    };
    t.prototype.init = function(t, n, r) {
        this.enabled = !0;
        this.type = t;
        this.$element = e(n);
        this.options = this.getOptions(r);
        var i = this.options.trigger.split(" ");
        for (var s = i.length; s--; ) {
            var o = i[s];
            if (o == "click") this.$element.on("click." + this.type, this.options.selector, e.proxy(this.toggle, this)); else if (o != "manual") {
                var u = o == "hover" ? "mouseenter" : "focus", a = o == "hover" ? "mouseleave" : "blur";
                this.$element.on(u + "." + this.type, this.options.selector, e.proxy(this.enter, this));
                this.$element.on(a + "." + this.type, this.options.selector, e.proxy(this.leave, this));
            }
        }
        this.options.selector ? this._options = e.extend({}, this.options, {
            trigger: "manual",
            selector: ""
        }) : this.fixTitle();
    };
    t.prototype.getDefaults = function() {
        return t.DEFAULTS;
    };
    t.prototype.getOptions = function(t) {
        t = e.extend({}, this.getDefaults(), this.$element.data(), t);
        t.delay && typeof t.delay == "number" && (t.delay = {
            show: t.delay,
            hide: t.delay
        });
        return t;
    };
    t.prototype.getDelegateOptions = function() {
        var t = {}, n = this.getDefaults();
        this._options && e.each(this._options, function(e, r) {
            n[e] != r && (t[e] = r);
        });
        return t;
    };
    t.prototype.enter = function(t) {
        var n = t instanceof this.constructor ? t : e(t.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type);
        clearTimeout(n.timeout);
        n.hoverState = "in";
        if (!n.options.delay || !n.options.delay.show) return n.show();
        n.timeout = setTimeout(function() {
            n.hoverState == "in" && n.show();
        }, n.options.delay.show);
    };
    t.prototype.leave = function(t) {
        var n = t instanceof this.constructor ? t : e(t.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type);
        clearTimeout(n.timeout);
        n.hoverState = "out";
        if (!n.options.delay || !n.options.delay.hide) return n.hide();
        n.timeout = setTimeout(function() {
            n.hoverState == "out" && n.hide();
        }, n.options.delay.hide);
    };
    t.prototype.show = function() {
        var t = e.Event("show.bs." + this.type);
        if (this.hasContent() && this.enabled) {
            this.$element.trigger(t);
            if (t.isDefaultPrevented()) return;
            var n = this.tip();
            this.setContent();
            this.options.animation && n.addClass("fade");
            var r = typeof this.options.placement == "function" ? this.options.placement.call(this, n[0], this.$element[0]) : this.options.placement, i = /\s?auto?\s?/i, s = i.test(r);
            s && (r = r.replace(i, "") || "top");
            n.detach().css({
                top: 0,
                left: 0,
                display: "block"
            }).addClass(r);
            this.options.container ? n.appendTo(this.options.container) : n.insertAfter(this.$element);
            var o = this.getPosition(), u = n[0].offsetWidth, a = n[0].offsetHeight;
            if (s) {
                var f = this.$element.parent(), l = r, c = document.documentElement.scrollTop || document.body.scrollTop, h = this.options.container == "body" ? window.innerWidth : f.outerWidth(), p = this.options.container == "body" ? window.innerHeight : f.outerHeight(), d = this.options.container == "body" ? 0 : f.offset().left;
                r = r == "bottom" && o.top + o.height + a - c > p ? "top" : r == "top" && o.top - c - a < 0 ? "bottom" : r == "right" && o.right + u > h ? "left" : r == "left" && o.left - u < d ? "right" : r;
                n.removeClass(l).addClass(r);
            }
            var v = this.getCalculatedOffset(r, o, u, a);
            this.applyPlacement(v, r);
            this.$element.trigger("shown.bs." + this.type);
        }
    };
    t.prototype.applyPlacement = function(e, t) {
        var n, r = this.tip(), i = r[0].offsetWidth, s = r[0].offsetHeight, o = parseInt(r.css("margin-top"), 10), u = parseInt(r.css("margin-left"), 10);
        isNaN(o) && (o = 0);
        isNaN(u) && (u = 0);
        e.top = e.top + o;
        e.left = e.left + u;
        r.offset(e).addClass("in");
        var a = r[0].offsetWidth, f = r[0].offsetHeight;
        if (t == "top" && f != s) {
            n = !0;
            e.top = e.top + s - f;
        }
        if (/bottom|top/.test(t)) {
            var l = 0;
            if (e.left < 0) {
                l = e.left * -2;
                e.left = 0;
                r.offset(e);
                a = r[0].offsetWidth;
                f = r[0].offsetHeight;
            }
            this.replaceArrow(l - i + a, a, "left");
        } else this.replaceArrow(f - s, f, "top");
        n && r.offset(e);
    };
    t.prototype.replaceArrow = function(e, t, n) {
        this.arrow().css(n, e ? 50 * (1 - e / t) + "%" : "");
    };
    t.prototype.setContent = function() {
        var e = this.tip(), t = this.getTitle();
        e.find(".tooltip-inner")[this.options.html ? "html" : "text"](t);
        e.removeClass("fade in top bottom left right");
    };
    t.prototype.hide = function() {
        function complete() {
            t.hoverState != "in" && n.detach();
        }
        var t = this, n = this.tip(), r = e.Event("hide.bs." + this.type);
        this.$element.trigger(r);
        if (r.isDefaultPrevented()) return;
        n.removeClass("in");
        e.support.transition && this.$tip.hasClass("fade") ? n.one(e.support.transition.end, complete).emulateTransitionEnd(150) : complete();
        this.$element.trigger("hidden.bs." + this.type);
        return this;
    };
    t.prototype.fixTitle = function() {
        var e = this.$element;
        (e.attr("title") || typeof e.attr("data-original-title") != "string") && e.attr("data-original-title", e.attr("title") || "").attr("title", "");
    };
    t.prototype.hasContent = function() {
        return this.getTitle();
    };
    t.prototype.getPosition = function() {
        var t = this.$element[0];
        return e.extend({}, typeof t.getBoundingClientRect == "function" ? t.getBoundingClientRect() : {
            width: t.offsetWidth,
            height: t.offsetHeight
        }, this.$element.offset());
    };
    t.prototype.getCalculatedOffset = function(e, t, n, r) {
        return e == "bottom" ? {
            top: t.top + t.height,
            left: t.left + t.width / 2 - n / 2
        } : e == "top" ? {
            top: t.top - r,
            left: t.left + t.width / 2 - n / 2
        } : e == "left" ? {
            top: t.top + t.height / 2 - r / 2,
            left: t.left - n
        } : {
            top: t.top + t.height / 2 - r / 2,
            left: t.left + t.width
        };
    };
    t.prototype.getTitle = function() {
        var e, t = this.$element, n = this.options;
        e = t.attr("data-original-title") || (typeof n.title == "function" ? n.title.call(t[0]) : n.title);
        return e;
    };
    t.prototype.tip = function() {
        return this.$tip = this.$tip || e(this.options.template);
    };
    t.prototype.arrow = function() {
        return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow");
    };
    t.prototype.validate = function() {
        if (!this.$element[0].parentNode) {
            this.hide();
            this.$element = null;
            this.options = null;
        }
    };
    t.prototype.enable = function() {
        this.enabled = !0;
    };
    t.prototype.disable = function() {
        this.enabled = !1;
    };
    t.prototype.toggleEnabled = function() {
        this.enabled = !this.enabled;
    };
    t.prototype.toggle = function(t) {
        var n = t ? e(t.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type) : this;
        n.tip().hasClass("in") ? n.leave(n) : n.enter(n);
    };
    t.prototype.destroy = function() {
        this.hide().$element.off("." + this.type).removeData("bs." + this.type);
    };
    var n = e.fn.tooltip;
    e.fn.tooltip = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("bs.tooltip"), s = typeof n == "object" && n;
            i || r.data("bs.tooltip", i = new t(this, s));
            typeof n == "string" && i[n]();
        });
    };
    e.fn.tooltip.Constructor = t;
    e.fn.tooltip.noConflict = function() {
        e.fn.tooltip = n;
        return this;
    };
}(window.jQuery);

+function(e) {
    "use strict";
    var t = '[data-dismiss="alert"]', n = function(n) {
        e(n).on("click", t, this.close);
    };
    n.prototype.close = function(t) {
        function removeElement() {
            i.trigger("closed.bs.alert").remove();
        }
        var n = e(this), r = n.attr("data-target");
        if (!r) {
            r = n.attr("href");
            r = r && r.replace(/.*(?=#[^\s]*$)/, "");
        }
        var i = e(r);
        t && t.preventDefault();
        i.length || (i = n.hasClass("alert") ? n : n.parent());
        i.trigger(t = e.Event("close.bs.alert"));
        if (t.isDefaultPrevented()) return;
        i.removeClass("in");
        e.support.transition && i.hasClass("fade") ? i.one(e.support.transition.end, removeElement).emulateTransitionEnd(150) : removeElement();
    };
    var r = e.fn.alert;
    e.fn.alert = function(t) {
        return this.each(function() {
            var r = e(this), i = r.data("bs.alert");
            i || r.data("bs.alert", i = new n(this));
            typeof t == "string" && i[t].call(r);
        });
    };
    e.fn.alert.Constructor = n;
    e.fn.alert.noConflict = function() {
        e.fn.alert = r;
        return this;
    };
    e(document).on("click.bs.alert.data-api", t, n.prototype.close);
}(window.jQuery);

+function(e) {
    "use strict";
    var t = function(n, r) {
        this.$element = e(n);
        this.options = e.extend({}, t.DEFAULTS, r);
    };
    t.DEFAULTS = {
        loadingText: "loading..."
    };
    t.prototype.setState = function(e) {
        var t = "disabled", n = this.$element, r = n.is("input") ? "val" : "html", i = n.data();
        e += "Text";
        i.resetText || n.data("resetText", n[r]());
        n[r](i[e] || this.options[e]);
        setTimeout(function() {
            e == "loadingText" ? n.addClass(t).attr(t, t) : n.removeClass(t).removeAttr(t);
        }, 0);
    };
    t.prototype.toggle = function() {
        var e = this.$element.closest('[data-toggle="buttons"]');
        if (e.length) {
            var t = this.$element.find("input").prop("checked", !this.$element.hasClass("active")).trigger("change");
            t.prop("type") === "radio" && e.find(".active").removeClass("active");
        }
        this.$element.toggleClass("active");
    };
    var n = e.fn.button;
    e.fn.button = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("bs.button"), s = typeof n == "object" && n;
            i || r.data("bs.button", i = new t(this, s));
            n == "toggle" ? i.toggle() : n && i.setState(n);
        });
    };
    e.fn.button.Constructor = t;
    e.fn.button.noConflict = function() {
        e.fn.button = n;
        return this;
    };
    e(document).on("click.bs.button.data-api", "[data-toggle^=button]", function(t) {
        var n = e(t.target);
        n.hasClass("btn") || (n = n.closest(".btn"));
        n.button("toggle");
        t.preventDefault();
    });
}(window.jQuery);

+function(e) {
    "use strict";
    var t = function(t, n) {
        this.$element = e(t);
        this.$indicators = this.$element.find(".carousel-indicators");
        this.options = n;
        this.paused = this.sliding = this.interval = this.$active = this.$items = null;
        this.options.pause == "hover" && this.$element.on("mouseenter", e.proxy(this.pause, this)).on("mouseleave", e.proxy(this.cycle, this));
    };
    t.DEFAULTS = {
        interval: 5e3,
        pause: "hover",
        wrap: !0
    };
    t.prototype.cycle = function(t) {
        t || (this.paused = !1);
        this.interval && clearInterval(this.interval);
        this.options.interval && !this.paused && (this.interval = setInterval(e.proxy(this.next, this), this.options.interval));
        return this;
    };
    t.prototype.getActiveIndex = function() {
        this.$active = this.$element.find(".item.active");
        this.$items = this.$active.parent().children();
        return this.$items.index(this.$active);
    };
    t.prototype.to = function(t) {
        var n = this, r = this.getActiveIndex();
        if (t > this.$items.length - 1 || t < 0) return;
        return this.sliding ? this.$element.one("slid", function() {
            n.to(t);
        }) : r == t ? this.pause().cycle() : this.slide(t > r ? "next" : "prev", e(this.$items[t]));
    };
    t.prototype.pause = function(t) {
        t || (this.paused = !0);
        if (this.$element.find(".next, .prev").length && e.support.transition.end) {
            this.$element.trigger(e.support.transition.end);
            this.cycle(!0);
        }
        this.interval = clearInterval(this.interval);
        return this;
    };
    t.prototype.next = function() {
        if (this.sliding) return;
        return this.slide("next");
    };
    t.prototype.prev = function() {
        if (this.sliding) return;
        return this.slide("prev");
    };
    t.prototype.slide = function(t, n) {
        var r = this.$element.find(".item.active"), i = n || r[t](), s = this.interval, o = t == "next" ? "left" : "right", u = t == "next" ? "first" : "last", a = this;
        if (!i.length) {
            if (!this.options.wrap) return;
            i = this.$element.find(".item")[u]();
        }
        this.sliding = !0;
        s && this.pause();
        var f = e.Event("slide.bs.carousel", {
            relatedTarget: i[0],
            direction: o
        });
        if (i.hasClass("active")) return;
        if (this.$indicators.length) {
            this.$indicators.find(".active").removeClass("active");
            this.$element.one("slid", function() {
                var t = e(a.$indicators.children()[a.getActiveIndex()]);
                t && t.addClass("active");
            });
        }
        if (e.support.transition && this.$element.hasClass("slide")) {
            this.$element.trigger(f);
            if (f.isDefaultPrevented()) return;
            i.addClass(t);
            i[0].offsetWidth;
            r.addClass(o);
            i.addClass(o);
            r.one(e.support.transition.end, function() {
                i.removeClass([ t, o ].join(" ")).addClass("active");
                r.removeClass([ "active", o ].join(" "));
                a.sliding = !1;
                setTimeout(function() {
                    a.$element.trigger("slid");
                }, 0);
            }).emulateTransitionEnd(600);
        } else {
            this.$element.trigger(f);
            if (f.isDefaultPrevented()) return;
            r.removeClass("active");
            i.addClass("active");
            this.sliding = !1;
            this.$element.trigger("slid");
        }
        s && this.cycle();
        return this;
    };
    var n = e.fn.carousel;
    e.fn.carousel = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("bs.carousel"), s = e.extend({}, t.DEFAULTS, r.data(), typeof n == "object" && n), o = typeof n == "string" ? n : s.slide;
            i || r.data("bs.carousel", i = new t(this, s));
            typeof n == "number" ? i.to(n) : o ? i[o]() : s.interval && i.pause().cycle();
        });
    };
    e.fn.carousel.Constructor = t;
    e.fn.carousel.noConflict = function() {
        e.fn.carousel = n;
        return this;
    };
    e(document).on("click.bs.carousel.data-api", "[data-slide], [data-slide-to]", function(t) {
        var n = e(this), r, i = e(n.attr("data-target") || (r = n.attr("href")) && r.replace(/.*(?=#[^\s]+$)/, "")), s = e.extend({}, i.data(), n.data()), o = n.attr("data-slide-to");
        o && (s.interval = !1);
        i.carousel(s);
        (o = n.attr("data-slide-to")) && i.data("bs.carousel").to(o);
        t.preventDefault();
    });
    e(window).on("load", function() {
        e('[data-ride="carousel"]').each(function() {
            var t = e(this);
            t.carousel(t.data());
        });
    });
}(window.jQuery);

+function(e) {
    "use strict";
    var t = function(n, r) {
        this.$element = e(n);
        this.options = e.extend({}, t.DEFAULTS, r);
        this.transitioning = null;
        this.options.parent && (this.$parent = e(this.options.parent));
        this.options.toggle && this.toggle();
    };
    t.DEFAULTS = {
        toggle: !0
    };
    t.prototype.dimension = function() {
        var e = this.$element.hasClass("width");
        return e ? "width" : "height";
    };
    t.prototype.show = function() {
        if (this.transitioning || this.$element.hasClass("in")) return;
        var t = e.Event("show.bs.collapse");
        this.$element.trigger(t);
        if (t.isDefaultPrevented()) return;
        var n = this.$parent && this.$parent.find("> .panel > .in");
        if (n && n.length) {
            var r = n.data("bs.collapse");
            if (r && r.transitioning) return;
            n.collapse("hide");
            r || n.data("bs.collapse", null);
        }
        var i = this.dimension();
        this.$element.removeClass("collapse").addClass("collapsing")[i](0);
        this.transitioning = 1;
        var s = function() {
            this.$element.removeClass("collapsing").addClass("in")[i]("auto");
            this.transitioning = 0;
            this.$element.trigger("shown.bs.collapse");
        };
        if (!e.support.transition) return s.call(this);
        var o = e.camelCase([ "scroll", i ].join("-"));
        this.$element.one(e.support.transition.end, e.proxy(s, this)).emulateTransitionEnd(350)[i](this.$element[0][o]);
    };
    t.prototype.hide = function() {
        if (this.transitioning || !this.$element.hasClass("in")) return;
        var t = e.Event("hide.bs.collapse");
        this.$element.trigger(t);
        if (t.isDefaultPrevented()) return;
        var n = this.dimension();
        this.$element[n](this.$element[n]())[0].offsetHeight;
        this.$element.addClass("collapsing").removeClass("collapse").removeClass("in");
        this.transitioning = 1;
        var r = function() {
            this.transitioning = 0;
            this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse");
        };
        if (!e.support.transition) return r.call(this);
        this.$element[n](0).one(e.support.transition.end, e.proxy(r, this)).emulateTransitionEnd(350);
    };
    t.prototype.toggle = function() {
        this[this.$element.hasClass("in") ? "hide" : "show"]();
    };
    var n = e.fn.collapse;
    e.fn.collapse = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("bs.collapse"), s = e.extend({}, t.DEFAULTS, r.data(), typeof n == "object" && n);
            i || r.data("bs.collapse", i = new t(this, s));
            typeof n == "string" && i[n]();
        });
    };
    e.fn.collapse.Constructor = t;
    e.fn.collapse.noConflict = function() {
        e.fn.collapse = n;
        return this;
    };
    e(document).on("click.bs.collapse.data-api", "[data-toggle=collapse]", function(t) {
        var n = e(this), r, i = n.attr("data-target") || t.preventDefault() || (r = n.attr("href")) && r.replace(/.*(?=#[^\s]+$)/, ""), s = e(i), o = s.data("bs.collapse"), u = o ? "toggle" : n.data(), a = n.attr("data-parent"), f = a && e(a);
        if (!o || !o.transitioning) {
            f && f.find('[data-toggle=collapse][data-parent="' + a + '"]').not(n).addClass("collapsed");
            n[s.hasClass("in") ? "addClass" : "removeClass"]("collapsed");
        }
        s.collapse(u);
    });
}(window.jQuery);

+function(e) {
    "use strict";
    function clearMenus() {
        e(t).remove();
        e(n).each(function(t) {
            var n = getParent(e(this));
            if (!n.hasClass("open")) return;
            n.trigger(t = e.Event("hide.bs.dropdown"));
            if (t.isDefaultPrevented()) return;
            n.removeClass("open").trigger("hidden.bs.dropdown");
        });
    }
    function getParent(t) {
        var n = t.attr("data-target");
        if (!n) {
            n = t.attr("href");
            n = n && /#/.test(n) && n.replace(/.*(?=#[^\s]*$)/, "");
        }
        var r = n && e(n);
        return r && r.length ? r : t.parent();
    }
    var t = ".dropdown-backdrop", n = "[data-toggle=dropdown]", r = function(t) {
        var n = e(t).on("click.bs.dropdown", this.toggle);
    };
    r.prototype.toggle = function(t) {
        var n = e(this);
        if (n.is(".disabled, :disabled")) return;
        var r = getParent(n), i = r.hasClass("open");
        clearMenus();
        if (!i) {
            "ontouchstart" in document.documentElement && !r.closest(".navbar-nav").length && e('<div class="dropdown-backdrop"/>').insertAfter(e(this)).on("click", clearMenus);
            r.trigger(t = e.Event("show.bs.dropdown"));
            if (t.isDefaultPrevented()) return;
            r.toggleClass("open").trigger("shown.bs.dropdown");
            n.focus();
        }
        return !1;
    };
    r.prototype.keydown = function(t) {
        if (!/(38|40|27)/.test(t.keyCode)) return;
        var r = e(this);
        t.preventDefault();
        t.stopPropagation();
        if (r.is(".disabled, :disabled")) return;
        var i = getParent(r), s = i.hasClass("open");
        if (!s || s && t.keyCode == 27) {
            t.which == 27 && i.find(n).focus();
            return r.click();
        }
        var o = e("[role=menu] li:not(.divider):visible a", i);
        if (!o.length) return;
        var u = o.index(o.filter(":focus"));
        t.keyCode == 38 && u > 0 && u--;
        t.keyCode == 40 && u < o.length - 1 && u++;
        ~u || (u = 0);
        o.eq(u).focus();
    };
    var i = e.fn.dropdown;
    e.fn.dropdown = function(t) {
        return this.each(function() {
            var n = e(this), i = n.data("dropdown");
            i || n.data("dropdown", i = new r(this));
            typeof t == "string" && i[t].call(n);
        });
    };
    e.fn.dropdown.Constructor = r;
    e.fn.dropdown.noConflict = function() {
        e.fn.dropdown = i;
        return this;
    };
    e(document).on("click.bs.dropdown.data-api", clearMenus).on("click.bs.dropdown.data-api", ".dropdown form", function(e) {
        e.stopPropagation();
    }).on("click.bs.dropdown.data-api", n, r.prototype.toggle).on("keydown.bs.dropdown.data-api", n + ", [role=menu]", r.prototype.keydown);
}(window.jQuery);

+function(e) {
    "use strict";
    var t = function(t, n) {
        this.options = n;
        this.$element = e(t);
        this.$backdrop = this.isShown = null;
        this.options.remote && this.$element.load(this.options.remote);
    };
    t.DEFAULTS = {
        backdrop: !0,
        keyboard: !0,
        show: !0
    };
    t.prototype.toggle = function(e) {
        return this[this.isShown ? "hide" : "show"](e);
    };
    t.prototype.show = function(t) {
        var n = this, r = e.Event("show.bs.modal", {
            relatedTarget: t
        });
        this.$element.trigger(r);
        if (this.isShown || r.isDefaultPrevented()) return;
        this.isShown = !0;
        this.escape();
        this.$element.on("click.dismiss.modal", '[data-dismiss="modal"]', e.proxy(this.hide, this));
        this.backdrop(function() {
            var r = e.support.transition && n.$element.hasClass("fade");
            n.$element.parent().length || n.$element.appendTo(document.body);
            n.$element.show();
            r && n.$element[0].offsetWidth;
            n.$element.addClass("in").attr("aria-hidden", !1);
            n.enforceFocus();
            var i = e.Event("shown.bs.modal", {
                relatedTarget: t
            });
            r ? n.$element.find(".modal-dialog").one(e.support.transition.end, function() {
                n.$element.focus().trigger(i);
            }).emulateTransitionEnd(300) : n.$element.focus().trigger(i);
        });
    };
    t.prototype.hide = function(t) {
        t && t.preventDefault();
        t = e.Event("hide.bs.modal");
        this.$element.trigger(t);
        if (!this.isShown || t.isDefaultPrevented()) return;
        this.isShown = !1;
        this.escape();
        e(document).off("focusin.bs.modal");
        this.$element.removeClass("in").attr("aria-hidden", !0).off("click.dismiss.modal");
        e.support.transition && this.$element.hasClass("fade") ? this.$element.one(e.support.transition.end, e.proxy(this.hideModal, this)).emulateTransitionEnd(300) : this.hideModal();
    };
    t.prototype.enforceFocus = function() {
        e(document).off("focusin.bs.modal").on("focusin.bs.modal", e.proxy(function(e) {
            this.$element[0] !== e.target && !this.$element.has(e.target).length && this.$element.focus();
        }, this));
    };
    t.prototype.escape = function() {
        this.isShown && this.options.keyboard ? this.$element.on("keyup.dismiss.bs.modal", e.proxy(function(e) {
            e.which == 27 && this.hide();
        }, this)) : this.isShown || this.$element.off("keyup.dismiss.bs.modal");
    };
    t.prototype.hideModal = function() {
        var e = this;
        this.$element.hide();
        this.backdrop(function() {
            e.removeBackdrop();
            e.$element.trigger("hidden.bs.modal");
        });
    };
    t.prototype.removeBackdrop = function() {
        this.$backdrop && this.$backdrop.remove();
        this.$backdrop = null;
    };
    t.prototype.backdrop = function(t) {
        var n = this, r = this.$element.hasClass("fade") ? "fade" : "";
        if (this.isShown && this.options.backdrop) {
            var i = e.support.transition && r;
            this.$backdrop = e('<div class="modal-backdrop ' + r + '" />').appendTo(document.body);
            this.$element.on("click.dismiss.modal", e.proxy(function(e) {
                if (e.target !== e.currentTarget) return;
                this.options.backdrop == "static" ? this.$element[0].focus.call(this.$element[0]) : this.hide.call(this);
            }, this));
            i && this.$backdrop[0].offsetWidth;
            this.$backdrop.addClass("in");
            if (!t) return;
            i ? this.$backdrop.one(e.support.transition.end, t).emulateTransitionEnd(150) : t();
        } else if (!this.isShown && this.$backdrop) {
            this.$backdrop.removeClass("in");
            e.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one(e.support.transition.end, t).emulateTransitionEnd(150) : t();
        } else t && t();
    };
    var n = e.fn.modal;
    e.fn.modal = function(n, r) {
        return this.each(function() {
            var i = e(this), s = i.data("bs.modal"), o = e.extend({}, t.DEFAULTS, i.data(), typeof n == "object" && n);
            s || i.data("bs.modal", s = new t(this, o));
            typeof n == "string" ? s[n](r) : o.show && s.show(r);
        });
    };
    e.fn.modal.Constructor = t;
    e.fn.modal.noConflict = function() {
        e.fn.modal = n;
        return this;
    };
    e(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(t) {
        var n = e(this), r = n.attr("href"), i = e(n.attr("data-target") || r && r.replace(/.*(?=#[^\s]+$)/, "")), s = i.data("modal") ? "toggle" : e.extend({
            remote: !/#/.test(r) && r
        }, i.data(), n.data());
        t.preventDefault();
        i.modal(s, this).one("hide", function() {
            n.is(":visible") && n.focus();
        });
    });
    e(document).on("show.bs.modal", ".modal", function() {
        e(document.body).addClass("modal-open");
    }).on("hidden.bs.modal", ".modal", function() {
        e(document.body).removeClass("modal-open");
    });
}(window.jQuery);

+function(e) {
    "use strict";
    var t = function(e, t) {
        this.init("popover", e, t);
    };
    if (!e.fn.tooltip) throw new Error("Popover requires tooltip.js");
    t.DEFAULTS = e.extend({}, e.fn.tooltip.Constructor.DEFAULTS, {
        placement: "right",
        trigger: "click",
        content: "",
        template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    });
    t.prototype = e.extend({}, e.fn.tooltip.Constructor.prototype);
    t.prototype.constructor = t;
    t.prototype.getDefaults = function() {
        return t.DEFAULTS;
    };
    t.prototype.setContent = function() {
        var e = this.tip(), t = this.getTitle(), n = this.getContent();
        e.find(".popover-title")[this.options.html ? "html" : "text"](t);
        e.find(".popover-content")[this.options.html ? "html" : "text"](n);
        e.removeClass("fade top bottom left right in");
        e.find(".popover-title").html() || e.find(".popover-title").hide();
    };
    t.prototype.hasContent = function() {
        return this.getTitle() || this.getContent();
    };
    t.prototype.getContent = function() {
        var e = this.$element, t = this.options;
        return e.attr("data-content") || (typeof t.content == "function" ? t.content.call(e[0]) : t.content);
    };
    t.prototype.arrow = function() {
        return this.$arrow = this.$arrow || this.tip().find(".arrow");
    };
    t.prototype.tip = function() {
        this.$tip || (this.$tip = e(this.options.template));
        return this.$tip;
    };
    var n = e.fn.popover;
    e.fn.popover = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("bs.popover"), s = typeof n == "object" && n;
            i || r.data("bs.popover", i = new t(this, s));
            typeof n == "string" && i[n]();
        });
    };
    e.fn.popover.Constructor = t;
    e.fn.popover.noConflict = function() {
        e.fn.popover = n;
        return this;
    };
}(window.jQuery);

+function(e) {
    "use strict";
    function ScrollSpy(t, n) {
        var r, i = e.proxy(this.process, this);
        this.$element = e(t).is("body") ? e(window) : e(t);
        this.$body = e("body");
        this.$scrollElement = this.$element.on("scroll.bs.scroll-spy.data-api", i);
        this.options = e.extend({}, ScrollSpy.DEFAULTS, n);
        this.selector = (this.options.target || (r = e(t).attr("href")) && r.replace(/.*(?=#[^\s]+$)/, "") || "") + " .nav li > a";
        this.offsets = e([]);
        this.targets = e([]);
        this.activeTarget = null;
        this.refresh();
        this.process();
    }
    ScrollSpy.DEFAULTS = {
        offset: 10
    };
    ScrollSpy.prototype.refresh = function() {
        var t = this.$element[0] == window ? "offset" : "position";
        this.offsets = e([]);
        this.targets = e([]);
        var n = this, r = this.$body.find(this.selector).map(function() {
            var r = e(this), i = r.data("target") || r.attr("href"), s = /^#\w/.test(i) && e(i);
            return s && s.length && [ [ s[t]().top + (!e.isWindow(n.$scrollElement.get(0)) && n.$scrollElement.scrollTop()), i ] ] || null;
        }).sort(function(e, t) {
            return e[0] - t[0];
        }).each(function() {
            n.offsets.push(this[0]);
            n.targets.push(this[1]);
        });
    };
    ScrollSpy.prototype.process = function() {
        var e = this.$scrollElement.scrollTop() + this.options.offset, t = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight, n = t - this.$scrollElement.height(), r = this.offsets, i = this.targets, s = this.activeTarget, o;
        if (e >= n) return s != (o = i.last()[0]) && this.activate(o);
        for (o = r.length; o--; ) s != i[o] && e >= r[o] && (!r[o + 1] || e <= r[o + 1]) && this.activate(i[o]);
    };
    ScrollSpy.prototype.activate = function(t) {
        this.activeTarget = t;
        e(this.selector).parents(".active").removeClass("active");
        var n = this.selector + '[data-target="' + t + '"],' + this.selector + '[href="' + t + '"]', r = e(n).parents("li").addClass("active");
        r.parent(".dropdown-menu").length && (r = r.closest("li.dropdown").addClass("active"));
        r.trigger("activate");
    };
    var t = e.fn.scrollspy;
    e.fn.scrollspy = function(t) {
        return this.each(function() {
            var n = e(this), r = n.data("bs.scrollspy"), i = typeof t == "object" && t;
            r || n.data("bs.scrollspy", r = new ScrollSpy(this, i));
            typeof t == "string" && r[t]();
        });
    };
    e.fn.scrollspy.Constructor = ScrollSpy;
    e.fn.scrollspy.noConflict = function() {
        e.fn.scrollspy = t;
        return this;
    };
    e(window).on("load", function() {
        e('[data-spy="scroll"]').each(function() {
            var t = e(this);
            t.scrollspy(t.data());
        });
    });
}(window.jQuery);

+function(e) {
    "use strict";
    var t = function(t) {
        this.element = e(t);
    };
    t.prototype.show = function() {
        var t = this.element, n = t.closest("ul:not(.dropdown-menu)"), r = t.attr("data-target");
        if (!r) {
            r = t.attr("href");
            r = r && r.replace(/.*(?=#[^\s]*$)/, "");
        }
        if (t.parent("li").hasClass("active")) return;
        var i = n.find(".active:last a")[0], s = e.Event("show.bs.tab", {
            relatedTarget: i
        });
        t.trigger(s);
        if (s.isDefaultPrevented()) return;
        var o = e(r);
        this.activate(t.parent("li"), n);
        this.activate(o, o.parent(), function() {
            t.trigger({
                type: "shown.bs.tab",
                relatedTarget: i
            });
        });
    };
    t.prototype.activate = function(t, n, r) {
        function next() {
            i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active");
            t.addClass("active");
            if (s) {
                t[0].offsetWidth;
                t.addClass("in");
            } else t.removeClass("fade");
            t.parent(".dropdown-menu") && t.closest("li.dropdown").addClass("active");
            r && r();
        }
        var i = n.find("> .active"), s = r && e.support.transition && i.hasClass("fade");
        s ? i.one(e.support.transition.end, next).emulateTransitionEnd(150) : next();
        i.removeClass("in");
    };
    var n = e.fn.tab;
    e.fn.tab = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("bs.tab");
            i || r.data("bs.tab", i = new t(this));
            typeof n == "string" && i[n]();
        });
    };
    e.fn.tab.Constructor = t;
    e.fn.tab.noConflict = function() {
        e.fn.tab = n;
        return this;
    };
    e(document).on("click.bs.tab.data-api", '[data-toggle="tab"], [data-toggle="pill"]', function(t) {
        t.preventDefault();
        e(this).tab("show");
    });
}(window.jQuery);

+function(e) {
    "use strict";
    function transitionEnd() {
        var e = document.createElement("bootstrap"), t = {
            WebkitTransition: "webkitTransitionEnd",
            MozTransition: "transitionend",
            OTransition: "oTransitionEnd otransitionend",
            transition: "transitionend"
        };
        for (var n in t) if (e.style[n] !== undefined) return {
            end: t[n]
        };
    }
    e.fn.emulateTransitionEnd = function(t) {
        var n = !1, r = this;
        e(this).one(e.support.transition.end, function() {
            n = !0;
        });
        var i = function() {
            n || e(r).trigger(e.support.transition.end);
        };
        setTimeout(i, t);
        return this;
    };
    e(function() {
        e.support.transition = transitionEnd();
    });
}(window.jQuery);

!function(e) {
    "use strict";
    var t = function(e, t) {
        this.init("tooltip", e, t);
    };
    t.prototype = {
        constructor: t,
        init: function(t, n, r) {
            var i, s, o, u, a;
            this.type = t;
            this.$element = e(n);
            this.options = this.getOptions(r);
            this.enabled = !0;
            o = this.options.trigger.split(" ");
            for (a = o.length; a--; ) {
                u = o[a];
                if (u == "click") this.$element.on("click." + this.type, this.options.selector, e.proxy(this.toggle, this)); else if (u != "manual") {
                    i = u == "hover" ? "mouseenter" : "focus";
                    s = u == "hover" ? "mouseleave" : "blur";
                    this.$element.on(i + "." + this.type, this.options.selector, e.proxy(this.enter, this));
                    this.$element.on(s + "." + this.type, this.options.selector, e.proxy(this.leave, this));
                }
            }
            this.options.selector ? this._options = e.extend({}, this.options, {
                trigger: "manual",
                selector: ""
            }) : this.fixTitle();
        },
        getOptions: function(t) {
            t = e.extend({}, e.fn[this.type].defaults, this.$element.data(), t);
            t.delay && typeof t.delay == "number" && (t.delay = {
                show: t.delay,
                hide: t.delay
            });
            return t;
        },
        enter: function(t) {
            var n = e.fn[this.type].defaults, r = {}, i;
            this._options && e.each(this._options, function(e, t) {
                n[e] != t && (r[e] = t);
            }, this);
            i = e(t.currentTarget)[this.type](r).data(this.type);
            if (!i.options.delay || !i.options.delay.show) return i.show();
            clearTimeout(this.timeout);
            i.hoverState = "in";
            this.timeout = setTimeout(function() {
                i.hoverState == "in" && i.show();
            }, i.options.delay.show);
        },
        leave: function(t) {
            var n = e(t.currentTarget)[this.type](this._options).data(this.type);
            this.timeout && clearTimeout(this.timeout);
            if (!n.options.delay || !n.options.delay.hide) return n.hide();
            n.hoverState = "out";
            this.timeout = setTimeout(function() {
                n.hoverState == "out" && n.hide();
            }, n.options.delay.hide);
        },
        show: function() {
            var t, n, r, i, s, o, u = e.Event("show");
            if (this.hasContent() && this.enabled) {
                this.$element.trigger(u);
                if (u.isDefaultPrevented()) return;
                t = this.tip();
                this.setContent();
                this.options.animation && t.addClass("fade");
                s = typeof this.options.placement == "function" ? this.options.placement.call(this, t[0], this.$element[0]) : this.options.placement;
                t.detach().css({
                    top: 0,
                    left: 0,
                    display: "block"
                });
                this.options.container ? t.appendTo(this.options.container) : t.insertAfter(this.$element);
                n = this.getPosition();
                r = t[0].offsetWidth;
                i = t[0].offsetHeight;
                switch (s) {
                  case "bottom":
                    o = {
                        top: n.top + n.height,
                        left: n.left + n.width / 2 - r / 2
                    };
                    break;
                  case "top":
                    o = {
                        top: n.top - i,
                        left: n.left + n.width / 2 - r / 2
                    };
                    break;
                  case "left":
                    o = {
                        top: n.top + n.height / 2 - i / 2,
                        left: n.left - r
                    };
                    break;
                  case "right":
                    o = {
                        top: n.top + n.height / 2 - i / 2,
                        left: n.left + n.width
                    };
                }
                this.applyPlacement(o, s);
                this.$element.trigger("shown");
            }
        },
        applyPlacement: function(e, t) {
            var n = this.tip(), r = n[0].offsetWidth, i = n[0].offsetHeight, s, o, u, a;
            n.offset(e).addClass(t).addClass("in");
            s = n[0].offsetWidth;
            o = n[0].offsetHeight;
            if (t == "top" && o != i) {
                e.top = e.top + i - o;
                a = !0;
            }
            if (t == "bottom" || t == "top") {
                u = 0;
                if (e.left < 0) {
                    u = e.left * -2;
                    e.left = 0;
                    n.offset(e);
                    s = n[0].offsetWidth;
                    o = n[0].offsetHeight;
                }
                this.replaceArrow(u - r + s, s, "left");
            } else this.replaceArrow(o - i, o, "top");
            a && n.offset(e);
        },
        replaceArrow: function(e, t, n) {
            this.arrow().css(n, e ? 50 * (1 - e / t) + "%" : "");
        },
        setContent: function() {
            var e = this.tip(), t = this.getTitle();
            e.find(".tooltip-inner")[this.options.html ? "html" : "text"](t);
            e.removeClass("fade in top bottom left right");
        },
        hide: function() {
            function removeWithAnimation() {
                var t = setTimeout(function() {
                    n.off(e.support.transition.end).detach();
                }, 500);
                n.one(e.support.transition.end, function() {
                    clearTimeout(t);
                    n.detach();
                });
            }
            var t = this, n = this.tip(), r = e.Event("hide");
            this.$element.trigger(r);
            if (r.isDefaultPrevented()) return;
            n.removeClass("in");
            e.support.transition && this.$tip.hasClass("fade") ? removeWithAnimation() : n.detach();
            this.$element.trigger("hidden");
            return this;
        },
        fixTitle: function() {
            var e = this.$element;
            (e.attr("title") || typeof e.attr("data-original-title") != "string") && e.attr("data-original-title", e.attr("title") || "").attr("title", "");
        },
        hasContent: function() {
            return this.getTitle();
        },
        getPosition: function() {
            var t = this.$element[0];
            return e.extend({}, typeof t.getBoundingClientRect == "function" ? t.getBoundingClientRect() : {
                width: t.offsetWidth,
                height: t.offsetHeight
            }, this.$element.offset());
        },
        getTitle: function() {
            var e, t = this.$element, n = this.options;
            e = t.attr("data-original-title") || (typeof n.title == "function" ? n.title.call(t[0]) : n.title);
            return e;
        },
        tip: function() {
            return this.$tip = this.$tip || e(this.options.template);
        },
        arrow: function() {
            return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow");
        },
        validate: function() {
            if (!this.$element[0].parentNode) {
                this.hide();
                this.$element = null;
                this.options = null;
            }
        },
        enable: function() {
            this.enabled = !0;
        },
        disable: function() {
            this.enabled = !1;
        },
        toggleEnabled: function() {
            this.enabled = !this.enabled;
        },
        toggle: function(t) {
            var n = t ? e(t.currentTarget)[this.type](this._options).data(this.type) : this;
            n.tip().hasClass("in") ? n.hide() : n.show();
        },
        destroy: function() {
            this.hide().$element.off("." + this.type).removeData(this.type);
        }
    };
    var n = e.fn.tooltip;
    e.fn.tooltip = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("tooltip"), s = typeof n == "object" && n;
            i || r.data("tooltip", i = new t(this, s));
            typeof n == "string" && i[n]();
        });
    };
    e.fn.tooltip.Constructor = t;
    e.fn.tooltip.defaults = {
        animation: !0,
        placement: "top",
        selector: !1,
        template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: "hover focus",
        title: "",
        delay: 0,
        html: !1,
        container: !1
    };
    e.fn.tooltip.noConflict = function() {
        e.fn.tooltip = n;
        return this;
    };
}(window.jQuery);

!function(e) {
    "use strict";
    var t = function(t, n) {
        this.options = e.extend({}, e.fn.affix.defaults, n);
        this.$window = e(window).on("scroll.affix.data-api", e.proxy(this.checkPosition, this)).on("click.affix.data-api", e.proxy(function() {
            setTimeout(e.proxy(this.checkPosition, this), 1);
        }, this));
        this.$element = e(t);
        this.checkPosition();
    };
    t.prototype.checkPosition = function() {
        if (!this.$element.is(":visible")) return;
        var t = e(document).height(), n = this.$window.scrollTop(), r = this.$element.offset(), i = this.options.offset, s = i.bottom, o = i.top, u = "affix affix-top affix-bottom", a;
        typeof i != "object" && (s = o = i);
        typeof o == "function" && (o = i.top());
        typeof s == "function" && (s = i.bottom());
        a = this.unpin != null && n + this.unpin <= r.top ? !1 : s != null && r.top + this.$element.height() >= t - s ? "bottom" : o != null && n <= o ? "top" : !1;
        if (this.affixed === a) return;
        this.affixed = a;
        this.unpin = a == "bottom" ? r.top - n : null;
        this.$element.removeClass(u).addClass("affix" + (a ? "-" + a : ""));
    };
    var n = e.fn.affix;
    e.fn.affix = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("affix"), s = typeof n == "object" && n;
            i || r.data("affix", i = new t(this, s));
            typeof n == "string" && i[n]();
        });
    };
    e.fn.affix.Constructor = t;
    e.fn.affix.defaults = {
        offset: 0
    };
    e.fn.affix.noConflict = function() {
        e.fn.affix = n;
        return this;
    };
    e(window).on("load", function() {
        e('[data-spy="affix"]').each(function() {
            var t = e(this), n = t.data();
            n.offset = n.offset || {};
            n.offsetBottom && (n.offset.bottom = n.offsetBottom);
            n.offsetTop && (n.offset.top = n.offsetTop);
            t.affix(n);
        });
    });
}(window.jQuery);

!function(e) {
    "use strict";
    var t = '[data-dismiss="alert"]', n = function(n) {
        e(n).on("click", t, this.close);
    };
    n.prototype.close = function(t) {
        function removeElement() {
            i.trigger("closed").remove();
        }
        var n = e(this), r = n.attr("data-target"), i;
        if (!r) {
            r = n.attr("href");
            r = r && r.replace(/.*(?=#[^\s]*$)/, "");
        }
        i = e(r);
        t && t.preventDefault();
        i.length || (i = n.hasClass("alert") ? n : n.parent());
        i.trigger(t = e.Event("close"));
        if (t.isDefaultPrevented()) return;
        i.removeClass("in");
        e.support.transition && i.hasClass("fade") ? i.on(e.support.transition.end, removeElement) : removeElement();
    };
    var r = e.fn.alert;
    e.fn.alert = function(t) {
        return this.each(function() {
            var r = e(this), i = r.data("alert");
            i || r.data("alert", i = new n(this));
            typeof t == "string" && i[t].call(r);
        });
    };
    e.fn.alert.Constructor = n;
    e.fn.alert.noConflict = function() {
        e.fn.alert = r;
        return this;
    };
    e(document).on("click.alert.data-api", t, n.prototype.close);
}(window.jQuery);

!function(e) {
    "use strict";
    var t = function(t, n) {
        this.$element = e(t);
        this.options = e.extend({}, e.fn.button.defaults, n);
    };
    t.prototype.setState = function(e) {
        var t = "disabled", n = this.$element, r = n.data(), i = n.is("input") ? "val" : "html";
        e += "Text";
        r.resetText || n.data("resetText", n[i]());
        n[i](r[e] || this.options[e]);
        setTimeout(function() {
            e == "loadingText" ? n.addClass(t).attr(t, t) : n.removeClass(t).removeAttr(t);
        }, 0);
    };
    t.prototype.toggle = function() {
        var e = this.$element.closest('[data-toggle="buttons-radio"]');
        e && e.find(".active").removeClass("active");
        this.$element.toggleClass("active");
    };
    var n = e.fn.button;
    e.fn.button = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("button"), s = typeof n == "object" && n;
            i || r.data("button", i = new t(this, s));
            n == "toggle" ? i.toggle() : n && i.setState(n);
        });
    };
    e.fn.button.defaults = {
        loadingText: "loading..."
    };
    e.fn.button.Constructor = t;
    e.fn.button.noConflict = function() {
        e.fn.button = n;
        return this;
    };
    e(document).on("click.button.data-api", "[data-toggle^=button]", function(t) {
        var n = e(t.target);
        n.hasClass("btn") || (n = n.closest(".btn"));
        n.button("toggle");
    });
}(window.jQuery);

!function(e) {
    "use strict";
    var t = function(t, n) {
        this.$element = e(t);
        this.$indicators = this.$element.find(".carousel-indicators");
        this.options = n;
        this.options.pause == "hover" && this.$element.on("mouseenter", e.proxy(this.pause, this)).on("mouseleave", e.proxy(this.cycle, this));
    };
    t.prototype = {
        cycle: function(t) {
            t || (this.paused = !1);
            this.interval && clearInterval(this.interval);
            this.options.interval && !this.paused && (this.interval = setInterval(e.proxy(this.next, this), this.options.interval));
            return this;
        },
        getActiveIndex: function() {
            this.$active = this.$element.find(".item.active");
            this.$items = this.$active.parent().children();
            return this.$items.index(this.$active);
        },
        to: function(t) {
            var n = this.getActiveIndex(), r = this;
            if (t > this.$items.length - 1 || t < 0) return;
            return this.sliding ? this.$element.one("slid", function() {
                r.to(t);
            }) : n == t ? this.pause().cycle() : this.slide(t > n ? "next" : "prev", e(this.$items[t]));
        },
        pause: function(t) {
            t || (this.paused = !0);
            if (this.$element.find(".next, .prev").length && e.support.transition.end) {
                this.$element.trigger(e.support.transition.end);
                this.cycle(!0);
            }
            clearInterval(this.interval);
            this.interval = null;
            return this;
        },
        next: function() {
            if (this.sliding) return;
            return this.slide("next");
        },
        prev: function() {
            if (this.sliding) return;
            return this.slide("prev");
        },
        slide: function(t, n) {
            var r = this.$element.find(".item.active"), i = n || r[t](), s = this.interval, o = t == "next" ? "left" : "right", u = t == "next" ? "first" : "last", a = this, f;
            this.sliding = !0;
            s && this.pause();
            i = i.length ? i : this.$element.find(".item")[u]();
            f = e.Event("slide", {
                relatedTarget: i[0],
                direction: o
            });
            if (i.hasClass("active")) return;
            if (this.$indicators.length) {
                this.$indicators.find(".active").removeClass("active");
                this.$element.one("slid", function() {
                    var t = e(a.$indicators.children()[a.getActiveIndex()]);
                    t && t.addClass("active");
                });
            }
            if (e.support.transition && this.$element.hasClass("slide")) {
                this.$element.trigger(f);
                if (f.isDefaultPrevented()) return;
                i.addClass(t);
                i[0].offsetWidth;
                r.addClass(o);
                i.addClass(o);
                this.$element.one(e.support.transition.end, function() {
                    i.removeClass([ t, o ].join(" ")).addClass("active");
                    r.removeClass([ "active", o ].join(" "));
                    a.sliding = !1;
                    setTimeout(function() {
                        a.$element.trigger("slid");
                    }, 0);
                });
            } else {
                this.$element.trigger(f);
                if (f.isDefaultPrevented()) return;
                r.removeClass("active");
                i.addClass("active");
                this.sliding = !1;
                this.$element.trigger("slid");
            }
            s && this.cycle();
            return this;
        }
    };
    var n = e.fn.carousel;
    e.fn.carousel = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("carousel"), s = e.extend({}, e.fn.carousel.defaults, typeof n == "object" && n), o = typeof n == "string" ? n : s.slide;
            i || r.data("carousel", i = new t(this, s));
            typeof n == "number" ? i.to(n) : o ? i[o]() : s.interval && i.pause().cycle();
        });
    };
    e.fn.carousel.defaults = {
        interval: 5e3,
        pause: "hover"
    };
    e.fn.carousel.Constructor = t;
    e.fn.carousel.noConflict = function() {
        e.fn.carousel = n;
        return this;
    };
    e(document).on("click.carousel.data-api", "[data-slide], [data-slide-to]", function(t) {
        var n = e(this), r, i = e(n.attr("data-target") || (r = n.attr("href")) && r.replace(/.*(?=#[^\s]+$)/, "")), s = e.extend({}, i.data(), n.data()), o;
        i.carousel(s);
        (o = n.attr("data-slide-to")) && i.data("carousel").pause().to(o).cycle();
        t.preventDefault();
    });
}(window.jQuery);

!function(e) {
    "use strict";
    var t = function(t, n) {
        this.$element = e(t);
        this.options = e.extend({}, e.fn.collapse.defaults, n);
        this.options.parent && (this.$parent = e(this.options.parent));
        this.options.toggle && this.toggle();
    };
    t.prototype = {
        constructor: t,
        dimension: function() {
            var e = this.$element.hasClass("width");
            return e ? "width" : "height";
        },
        show: function() {
            var t, n, r, i;
            if (this.transitioning || this.$element.hasClass("in")) return;
            t = this.dimension();
            n = e.camelCase([ "scroll", t ].join("-"));
            r = this.$parent && this.$parent.find("> .accordion-group > .in");
            if (r && r.length) {
                i = r.data("collapse");
                if (i && i.transitioning) return;
                r.collapse("hide");
                i || r.data("collapse", null);
            }
            this.$element[t](0);
            this.transition("addClass", e.Event("show"), "shown");
            e.support.transition && this.$element[t](this.$element[0][n]);
        },
        hide: function() {
            var t;
            if (this.transitioning || !this.$element.hasClass("in")) return;
            t = this.dimension();
            this.reset(this.$element[t]());
            this.transition("removeClass", e.Event("hide"), "hidden");
            this.$element[t](0);
        },
        reset: function(e) {
            var t = this.dimension();
            this.$element.removeClass("collapse")[t](e || "auto")[0].offsetWidth;
            this.$element[e !== null ? "addClass" : "removeClass"]("collapse");
            return this;
        },
        transition: function(t, n, r) {
            var i = this, s = function() {
                n.type == "show" && i.reset();
                i.transitioning = 0;
                i.$element.trigger(r);
            };
            this.$element.trigger(n);
            if (n.isDefaultPrevented()) return;
            this.transitioning = 1;
            this.$element[t]("in");
            e.support.transition && this.$element.hasClass("collapse") ? this.$element.one(e.support.transition.end, s) : s();
        },
        toggle: function() {
            this[this.$element.hasClass("in") ? "hide" : "show"]();
        }
    };
    var n = e.fn.collapse;
    e.fn.collapse = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("collapse"), s = e.extend({}, e.fn.collapse.defaults, r.data(), typeof n == "object" && n);
            i || r.data("collapse", i = new t(this, s));
            typeof n == "string" && i[n]();
        });
    };
    e.fn.collapse.defaults = {
        toggle: !0
    };
    e.fn.collapse.Constructor = t;
    e.fn.collapse.noConflict = function() {
        e.fn.collapse = n;
        return this;
    };
    e(document).on("click.collapse.data-api", "[data-toggle=collapse]", function(t) {
        var n = e(this), r, i = n.attr("data-target") || t.preventDefault() || (r = n.attr("href")) && r.replace(/.*(?=#[^\s]+$)/, ""), s = e(i).data("collapse") ? "toggle" : n.data();
        n[e(i).hasClass("in") ? "addClass" : "removeClass"]("collapsed");
        e(i).collapse(s);
    });
}(window.jQuery);

!function(e) {
    "use strict";
    function clearMenus() {
        e(".dropdown-backdrop").remove();
        e(t).each(function() {
            getParent(e(this)).removeClass("open");
        });
    }
    function getParent(t) {
        var n = t.attr("data-target"), r;
        if (!n) {
            n = t.attr("href");
            n = n && /#/.test(n) && n.replace(/.*(?=#[^\s]*$)/, "");
        }
        r = n && e(n);
        if (!r || !r.length) r = t.parent();
        return r;
    }
    var t = "[data-toggle=dropdown]", n = function(t) {
        var n = e(t).on("click.dropdown.data-api", this.toggle);
        e("html").on("click.dropdown.data-api", function() {
            n.parent().removeClass("open");
        });
    };
    n.prototype = {
        constructor: n,
        toggle: function(t) {
            var n = e(this), r, i;
            if (n.is(".disabled, :disabled")) return;
            r = getParent(n);
            i = r.hasClass("open");
            clearMenus();
            if (!i) {
                "ontouchstart" in document.documentElement && e('<div class="dropdown-backdrop"/>').insertBefore(e(this)).on("click", clearMenus);
                r.toggleClass("open");
            }
            n.focus();
            return !1;
        },
        keydown: function(n) {
            var r, i, s, o, u, a;
            if (!/(38|40|27)/.test(n.keyCode)) return;
            r = e(this);
            n.preventDefault();
            n.stopPropagation();
            if (r.is(".disabled, :disabled")) return;
            o = getParent(r);
            u = o.hasClass("open");
            if (!u || u && n.keyCode == 27) {
                n.which == 27 && o.find(t).focus();
                return r.click();
            }
            i = e("[role=menu] li:not(.divider):visible a", o);
            if (!i.length) return;
            a = i.index(i.filter(":focus"));
            n.keyCode == 38 && a > 0 && a--;
            n.keyCode == 40 && a < i.length - 1 && a++;
            ~a || (a = 0);
            i.eq(a).focus();
        }
    };
    var r = e.fn.dropdown;
    e.fn.dropdown = function(t) {
        return this.each(function() {
            var r = e(this), i = r.data("dropdown");
            i || r.data("dropdown", i = new n(this));
            typeof t == "string" && i[t].call(r);
        });
    };
    e.fn.dropdown.Constructor = n;
    e.fn.dropdown.noConflict = function() {
        e.fn.dropdown = r;
        return this;
    };
    e(document).on("click.dropdown.data-api", clearMenus).on("click.dropdown.data-api", ".dropdown form", function(e) {
        e.stopPropagation();
    }).on("click.dropdown.data-api", t, n.prototype.toggle).on("keydown.dropdown.data-api", t + ", [role=menu]", n.prototype.keydown);
}(window.jQuery);

!function(e) {
    "use strict";
    var t = function(t, n) {
        this.options = n;
        this.$element = e(t).delegate('[data-dismiss="modal"]', "click.dismiss.modal", e.proxy(this.hide, this));
        this.options.remote && this.$element.find(".modal-body").load(this.options.remote);
    };
    t.prototype = {
        constructor: t,
        toggle: function() {
            return this[this.isShown ? "hide" : "show"]();
        },
        show: function() {
            var t = this, n = e.Event("show");
            this.$element.trigger(n);
            if (this.isShown || n.isDefaultPrevented()) return;
            this.isShown = !0;
            this.escape();
            this.backdrop(function() {
                var n = e.support.transition && t.$element.hasClass("fade");
                t.$element.parent().length || t.$element.appendTo(document.body);
                t.$element.show();
                n && t.$element[0].offsetWidth;
                t.$element.addClass("in").attr("aria-hidden", !1);
                t.enforceFocus();
                n ? t.$element.one(e.support.transition.end, function() {
                    t.$element.focus().trigger("shown");
                }) : t.$element.focus().trigger("shown");
            });
        },
        hide: function(t) {
            t && t.preventDefault();
            var n = this;
            t = e.Event("hide");
            this.$element.trigger(t);
            if (!this.isShown || t.isDefaultPrevented()) return;
            this.isShown = !1;
            this.escape();
            e(document).off("focusin.modal");
            this.$element.removeClass("in").attr("aria-hidden", !0);
            e.support.transition && this.$element.hasClass("fade") ? this.hideWithTransition() : this.hideModal();
        },
        enforceFocus: function() {
            var t = this;
            e(document).on("focusin.modal", function(e) {
                t.$element[0] !== e.target && !t.$element.has(e.target).length && t.$element.focus();
            });
        },
        escape: function() {
            var e = this;
            this.isShown && this.options.keyboard ? this.$element.on("keyup.dismiss.modal", function(t) {
                t.which == 27 && e.hide();
            }) : this.isShown || this.$element.off("keyup.dismiss.modal");
        },
        hideWithTransition: function() {
            var t = this, n = setTimeout(function() {
                t.$element.off(e.support.transition.end);
                t.hideModal();
            }, 500);
            this.$element.one(e.support.transition.end, function() {
                clearTimeout(n);
                t.hideModal();
            });
        },
        hideModal: function() {
            var e = this;
            this.$element.hide();
            this.backdrop(function() {
                e.removeBackdrop();
                e.$element.trigger("hidden");
            });
        },
        removeBackdrop: function() {
            this.$backdrop && this.$backdrop.remove();
            this.$backdrop = null;
        },
        backdrop: function(t) {
            var n = this, r = this.$element.hasClass("fade") ? "fade" : "";
            if (this.isShown && this.options.backdrop) {
                var i = e.support.transition && r;
                this.$backdrop = e('<div class="modal-backdrop ' + r + '" />').appendTo(document.body);
                this.$backdrop.click(this.options.backdrop == "static" ? e.proxy(this.$element[0].focus, this.$element[0]) : e.proxy(this.hide, this));
                i && this.$backdrop[0].offsetWidth;
                this.$backdrop.addClass("in");
                if (!t) return;
                i ? this.$backdrop.one(e.support.transition.end, t) : t();
            } else if (!this.isShown && this.$backdrop) {
                this.$backdrop.removeClass("in");
                e.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one(e.support.transition.end, t) : t();
            } else t && t();
        }
    };
    var n = e.fn.modal;
    e.fn.modal = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("modal"), s = e.extend({}, e.fn.modal.defaults, r.data(), typeof n == "object" && n);
            i || r.data("modal", i = new t(this, s));
            typeof n == "string" ? i[n]() : s.show && i.show();
        });
    };
    e.fn.modal.defaults = {
        backdrop: !0,
        keyboard: !0,
        show: !0
    };
    e.fn.modal.Constructor = t;
    e.fn.modal.noConflict = function() {
        e.fn.modal = n;
        return this;
    };
    e(document).on("click.modal.data-api", '[data-toggle="modal"]', function(t) {
        var n = e(this), r = n.attr("href"), i = e(n.attr("data-target") || r && r.replace(/.*(?=#[^\s]+$)/, "")), s = i.data("modal") ? "toggle" : e.extend({
            remote: !/#/.test(r) && r
        }, i.data(), n.data());
        t.preventDefault();
        i.modal(s).one("hide", function() {
            n.focus();
        });
    });
}(window.jQuery);

!function(e) {
    "use strict";
    var t = function(e, t) {
        this.init("popover", e, t);
    };
    t.prototype = e.extend({}, e.fn.tooltip.Constructor.prototype, {
        constructor: t,
        setContent: function() {
            var e = this.tip(), t = this.getTitle(), n = this.getContent();
            e.find(".popover-title")[this.options.html ? "html" : "text"](t);
            e.find(".popover-content")[this.options.html ? "html" : "text"](n);
            e.removeClass("fade top bottom left right in");
        },
        hasContent: function() {
            return this.getTitle() || this.getContent();
        },
        getContent: function() {
            var e, t = this.$element, n = this.options;
            e = (typeof n.content == "function" ? n.content.call(t[0]) : n.content) || t.attr("data-content");
            return e;
        },
        tip: function() {
            this.$tip || (this.$tip = e(this.options.template));
            return this.$tip;
        },
        destroy: function() {
            this.hide().$element.off("." + this.type).removeData(this.type);
        }
    });
    var n = e.fn.popover;
    e.fn.popover = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("popover"), s = typeof n == "object" && n;
            i || r.data("popover", i = new t(this, s));
            typeof n == "string" && i[n]();
        });
    };
    e.fn.popover.Constructor = t;
    e.fn.popover.defaults = e.extend({}, e.fn.tooltip.defaults, {
        placement: "right",
        trigger: "click",
        content: "",
        template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    });
    e.fn.popover.noConflict = function() {
        e.fn.popover = n;
        return this;
    };
}(window.jQuery);

!function(e) {
    "use strict";
    function ScrollSpy(t, n) {
        var r = e.proxy(this.process, this), i = e(t).is("body") ? e(window) : e(t), s;
        this.options = e.extend({}, e.fn.scrollspy.defaults, n);
        this.$scrollElement = i.on("scroll.scroll-spy.data-api", r);
        this.selector = (this.options.target || (s = e(t).attr("href")) && s.replace(/.*(?=#[^\s]+$)/, "") || "") + " .nav li > a";
        this.$body = e("body");
        this.refresh();
        this.process();
    }
    ScrollSpy.prototype = {
        constructor: ScrollSpy,
        refresh: function() {
            var t = this, n;
            this.offsets = e([]);
            this.targets = e([]);
            n = this.$body.find(this.selector).map(function() {
                var n = e(this), r = n.data("target") || n.attr("href"), i = /^#\w/.test(r) && e(r);
                return i && i.length && [ [ i.position().top + (!e.isWindow(t.$scrollElement.get(0)) && t.$scrollElement.scrollTop()), r ] ] || null;
            }).sort(function(e, t) {
                return e[0] - t[0];
            }).each(function() {
                t.offsets.push(this[0]);
                t.targets.push(this[1]);
            });
        },
        process: function() {
            var e = this.$scrollElement.scrollTop() + this.options.offset, t = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight, n = t - this.$scrollElement.height(), r = this.offsets, i = this.targets, s = this.activeTarget, o;
            if (e >= n) return s != (o = i.last()[0]) && this.activate(o);
            for (o = r.length; o--; ) s != i[o] && e >= r[o] && (!r[o + 1] || e <= r[o + 1]) && this.activate(i[o]);
        },
        activate: function(t) {
            var n, r;
            this.activeTarget = t;
            e(this.selector).parent(".active").removeClass("active");
            r = this.selector + '[data-target="' + t + '"],' + this.selector + '[href="' + t + '"]';
            n = e(r).parent("li").addClass("active");
            n.parent(".dropdown-menu").length && (n = n.closest("li.dropdown").addClass("active"));
            n.trigger("activate");
        }
    };
    var t = e.fn.scrollspy;
    e.fn.scrollspy = function(t) {
        return this.each(function() {
            var n = e(this), r = n.data("scrollspy"), i = typeof t == "object" && t;
            r || n.data("scrollspy", r = new ScrollSpy(this, i));
            typeof t == "string" && r[t]();
        });
    };
    e.fn.scrollspy.Constructor = ScrollSpy;
    e.fn.scrollspy.defaults = {
        offset: 10
    };
    e.fn.scrollspy.noConflict = function() {
        e.fn.scrollspy = t;
        return this;
    };
    e(window).on("load", function() {
        e('[data-spy="scroll"]').each(function() {
            var t = e(this);
            t.scrollspy(t.data());
        });
    });
}(window.jQuery);

!function(e) {
    "use strict";
    var t = function(t) {
        this.element = e(t);
    };
    t.prototype = {
        constructor: t,
        show: function() {
            var t = this.element, n = t.closest("ul:not(.dropdown-menu)"), r = t.attr("data-target"), i, s, o;
            if (!r) {
                r = t.attr("href");
                r = r && r.replace(/.*(?=#[^\s]*$)/, "");
            }
            if (t.parent("li").hasClass("active")) return;
            i = n.find(".active:last a")[0];
            o = e.Event("show", {
                relatedTarget: i
            });
            t.trigger(o);
            if (o.isDefaultPrevented()) return;
            s = e(r);
            this.activate(t.parent("li"), n);
            this.activate(s, s.parent(), function() {
                t.trigger({
                    type: "shown",
                    relatedTarget: i
                });
            });
        },
        activate: function(t, n, r) {
            function next() {
                i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active");
                t.addClass("active");
                if (s) {
                    t[0].offsetWidth;
                    t.addClass("in");
                } else t.removeClass("fade");
                t.parent(".dropdown-menu") && t.closest("li.dropdown").addClass("active");
                r && r();
            }
            var i = n.find("> .active"), s = r && e.support.transition && i.hasClass("fade");
            s ? i.one(e.support.transition.end, next) : next();
            i.removeClass("in");
        }
    };
    var n = e.fn.tab;
    e.fn.tab = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("tab");
            i || r.data("tab", i = new t(this));
            typeof n == "string" && i[n]();
        });
    };
    e.fn.tab.Constructor = t;
    e.fn.tab.noConflict = function() {
        e.fn.tab = n;
        return this;
    };
    e(document).on("click.tab.data-api", '[data-toggle="tab"], [data-toggle="pill"]', function(t) {
        t.preventDefault();
        e(this).tab("show");
    });
}(window.jQuery);

!function(e) {
    "use strict";
    e(function() {
        e.support.transition = function() {
            var e = function() {
                var e = document.createElement("bootstrap"), t = {
                    WebkitTransition: "webkitTransitionEnd",
                    MozTransition: "transitionend",
                    OTransition: "oTransitionEnd otransitionend",
                    transition: "transitionend"
                }, n;
                for (n in t) if (e.style[n] !== undefined) return t[n];
            }();
            return e && {
                end: e
            };
        }();
    });
}(window.jQuery);

!function(e) {
    "use strict";
    var t = function(t, n) {
        this.$element = e(t);
        this.options = e.extend({}, e.fn.typeahead.defaults, n);
        this.matcher = this.options.matcher || this.matcher;
        this.sorter = this.options.sorter || this.sorter;
        this.highlighter = this.options.highlighter || this.highlighter;
        this.updater = this.options.updater || this.updater;
        this.source = this.options.source;
        this.$menu = e(this.options.menu);
        this.shown = !1;
        this.listen();
    };
    t.prototype = {
        constructor: t,
        select: function() {
            var e = this.$menu.find(".active").attr("data-value");
            this.$element.val(this.updater(e)).change();
            return this.hide();
        },
        updater: function(e) {
            return e;
        },
        show: function() {
            var t = e.extend({}, this.$element.position(), {
                height: this.$element[0].offsetHeight
            });
            this.$menu.insertAfter(this.$element).css({
                top: t.top + t.height,
                left: t.left
            }).show();
            this.shown = !0;
            return this;
        },
        hide: function() {
            this.$menu.hide();
            this.shown = !1;
            return this;
        },
        lookup: function(t) {
            var n;
            this.query = this.$element.val();
            if (!this.query || this.query.length < this.options.minLength) return this.shown ? this.hide() : this;
            n = e.isFunction(this.source) ? this.source(this.query, e.proxy(this.process, this)) : this.source;
            return n ? this.process(n) : this;
        },
        process: function(t) {
            var n = this;
            t = e.grep(t, function(e) {
                return n.matcher(e);
            });
            t = this.sorter(t);
            return t.length ? this.render(t.slice(0, this.options.items)).show() : this.shown ? this.hide() : this;
        },
        matcher: function(e) {
            return ~e.toLowerCase().indexOf(this.query.toLowerCase());
        },
        sorter: function(e) {
            var t = [], n = [], r = [], i;
            while (i = e.shift()) i.toLowerCase().indexOf(this.query.toLowerCase()) ? ~i.indexOf(this.query) ? n.push(i) : r.push(i) : t.push(i);
            return t.concat(n, r);
        },
        highlighter: function(e) {
            var t = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
            return e.replace(new RegExp("(" + t + ")", "ig"), function(e, t) {
                return "<strong>" + t + "</strong>";
            });
        },
        render: function(t) {
            var n = this;
            t = e(t).map(function(t, r) {
                t = e(n.options.item).attr("data-value", r);
                t.find("a").html(n.highlighter(r));
                return t[0];
            });
            t.first().addClass("active");
            this.$menu.html(t);
            return this;
        },
        next: function(t) {
            var n = this.$menu.find(".active").removeClass("active"), r = n.next();
            r.length || (r = e(this.$menu.find("li")[0]));
            r.addClass("active");
        },
        prev: function(e) {
            var t = this.$menu.find(".active").removeClass("active"), n = t.prev();
            n.length || (n = this.$menu.find("li").last());
            n.addClass("active");
        },
        listen: function() {
            this.$element.on("focus", e.proxy(this.focus, this)).on("blur", e.proxy(this.blur, this)).on("keypress", e.proxy(this.keypress, this)).on("keyup", e.proxy(this.keyup, this));
            this.eventSupported("keydown") && this.$element.on("keydown", e.proxy(this.keydown, this));
            this.$menu.on("click", e.proxy(this.click, this)).on("mouseenter", "li", e.proxy(this.mouseenter, this)).on("mouseleave", "li", e.proxy(this.mouseleave, this));
        },
        eventSupported: function(e) {
            var t = e in this.$element;
            if (!t) {
                this.$element.setAttribute(e, "return;");
                t = typeof this.$element[e] == "function";
            }
            return t;
        },
        move: function(e) {
            if (!this.shown) return;
            switch (e.keyCode) {
              case 9:
              case 13:
              case 27:
                e.preventDefault();
                break;
              case 38:
                e.preventDefault();
                this.prev();
                break;
              case 40:
                e.preventDefault();
                this.next();
            }
            e.stopPropagation();
        },
        keydown: function(t) {
            this.suppressKeyPressRepeat = ~e.inArray(t.keyCode, [ 40, 38, 9, 13, 27 ]);
            this.move(t);
        },
        keypress: function(e) {
            if (this.suppressKeyPressRepeat) return;
            this.move(e);
        },
        keyup: function(e) {
            switch (e.keyCode) {
              case 40:
              case 38:
              case 16:
              case 17:
              case 18:
                break;
              case 9:
              case 13:
                if (!this.shown) return;
                this.select();
                break;
              case 27:
                if (!this.shown) return;
                this.hide();
                break;
              default:
                this.lookup();
            }
            e.stopPropagation();
            e.preventDefault();
        },
        focus: function(e) {
            this.focused = !0;
        },
        blur: function(e) {
            this.focused = !1;
            !this.mousedover && this.shown && this.hide();
        },
        click: function(e) {
            e.stopPropagation();
            e.preventDefault();
            this.select();
            this.$element.focus();
        },
        mouseenter: function(t) {
            this.mousedover = !0;
            this.$menu.find(".active").removeClass("active");
            e(t.currentTarget).addClass("active");
        },
        mouseleave: function(e) {
            this.mousedover = !1;
            !this.focused && this.shown && this.hide();
        }
    };
    var n = e.fn.typeahead;
    e.fn.typeahead = function(n) {
        return this.each(function() {
            var r = e(this), i = r.data("typeahead"), s = typeof n == "object" && n;
            i || r.data("typeahead", i = new t(this, s));
            typeof n == "string" && i[n]();
        });
    };
    e.fn.typeahead.defaults = {
        source: [],
        items: 8,
        menu: '<ul class="typeahead dropdown-menu"></ul>',
        item: '<li><a href="#"></a></li>',
        minLength: 1
    };
    e.fn.typeahead.Constructor = t;
    e.fn.typeahead.noConflict = function() {
        e.fn.typeahead = n;
        return this;
    };
    e(document).on("focus.typeahead.data-api", '[data-provide="typeahead"]', function(t) {
        var n = e(this);
        if (n.data("typeahead")) return;
        n.typeahead(n.data());
    });
}(window.jQuery);